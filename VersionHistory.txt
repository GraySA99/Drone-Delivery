Please note your changes with your name here!!! Keep newer versions at the top.

To make versions numbers easier:
-Add 00.01.000 to number for an update that implements any new features
-Add 00.00.001 if its just tweaks and bug fixes
-Add 01.00.000 for each sprint

Keywords for Starting entries (Just as a guide to keep things consistent):
-Added, Removed, Fixed, Changed, Renamed, Enabled, Disabled, ect...


Version Version# Month/Day/Year

Version 2.2.6 5/2/20
-Hopefully removed all bad stuff (Josh)
-Added comments (Josh)
-Added meals saving functionality (Josh)
-Should be back to normal (Josh)
-Cleared foodFrame (Josh)

Version 2.2.5 4/30/20
-Markers now properly implemented for live Map (Spencer)
-MapPage fully stylized. (Spencer)
-Meals and Food pages partially stylized (Spencer)

Version 2.2.4 4/29/20
-Added the addSkippedOrders, shouldContinueSkipping, and skipOrderIfMax methods to the simulation class for code cleanup (Patrick)
-Added misc improvements to the Knapsack simulation to make it more efficient (Patrick)
-Removed the OldFIFOSim.txt file (Patrick)
-Removed the final break statement from the Knapsack simulation (Patrick)

Version 2.2.3 4/28/20
-Added several methods to the simulation class for code cleanup purposes (Patrick)
-Promoted the currentTime, tripTime, currentOrder variables in the simulation to be class-wide to
allow more efficient methods to be created (Patrick)
-Fixed an issue with the default values in the defaults_universal file (Patrick)
-Fixed an issue where skipped knapsack orders did not have the correct pickup time (Patrick)
-Removed variables not declared in the correct spot in the knapsack method (Patrick)
-Removed the launched variable in the simulations. Just uses canLoad now (Patrick)
-Removed break statements outside of the skipped orders sections (Patrick)
-Enabled loading a .dd file - v1 (Josh)
-Made framework to save rules to .dd file (Josh)

Version 2.2.2 4/27/20
-initFromFile(String filename) inits from file (Josh)
-Added "load from ..." method stubs (Josh)

Version 2.2.1 4/24/20
-Refactored to make loops cleaner (Paul)

Version 2.2.0 4/23/20
-Created defaults_universal.dd file for default GUI values (Josh)
-Removed default files and removed their filename strings (Josh)
-Added more whitespace to defaults_universal.dd (Josh)

Version 2.1.0 4/22/20
-Added the DeliveryTimeList class to store all of the methods needed for a delivery time list and get them out of the drone class (Patrick)
-Removed all delivery time related methods from the Drone class except to get its two new lists (Patrick)

Version 2.0.2 4/22/20
-Added a getNumMeals method to the DataTransfer class (Patrick)
-Added pulling from the meals list in Simulation. There are no longer any hardcoded values in the Simulation class (Patrick)
-Changed default meals into new defaults meals (Patrick)
-Removed the deliverOrderFIFO and deliverOrderKnapsack methods and combined them into one method that does the function of both (Patrick)
-Graphs looks better and is refactored to add in multiple simulations (Paul)

Version 2.0.1 4/21/20
-Added the pulling number of orders per a given shift and number of simulations to be run from Data transfer to the simulation class (Patrick)
-Updated the default number of orders in each shift (Patrick)
-Changed all hardcoded values in the simulation class to meet the new requirements (Patrick)
-Renamed the sample package to the GUI package (Patrick)
-Began cleaning simulation class code, starting with magic numbers and predicate methods (Patrick)
-Fixed several issues when running more then one instance of Knapsack including an infinite loop when there were only skipped orders, and
an issue where it would get stuck at times (Patrick)
-Lengthened hour counter to receive results from number of simulations as well (Paul)

Version 2.0.0 4/15/20
-Started restyling pages (Not Finished) (Spencer)


||SPRINT 2||


Version 1.20.2 4/11/20
-Added a "Simulation is Finished" dialog window after the start button is pressed (Spencer)

Version 1.20.1 4/10/20
-Added lots of documentation to the Simulation class, Map class, Order class, Drone class, Food class, Meal class, and Waypoint class (Patrick)
-Added the hasSkipped variable to the Knapsack method as using just skip at some points may have been causing errors (Patrick)
-Refactored showing results by hour counter so errors didn't happen (Paul)
-Removed the orderGenerator, Hamburger, Fries, and Drink class (Patrick)

Version 1.20.0 4/9/20
-Added new variations of getNumFIFODeliveryTimes and getNumKnapsackDeliveryTimes that give the size for a specific hour (Patrick))
-Added restart button functionality (Paul)
-Changed the delivery times lists to be a list of lists where each list in the main list is a particular hour (Patrick)
-Changed back to one load order method in the simulation class (Patrick)
-Fixed incorrect Knapsack delivery times (Patrick)
-Cleaning up of unused variables, useless comments, changes from public to private, and duplicate methods in the simulation class (Patrick)
-Removed the getNumShifts method from the simulation class (Patrick)

Version 1.19.0 The Knapsack Update 4/8/20-4/9/20
-Added the map and number of shifts stored in the DataTransfer class to be used in the simulation (Patrick)
-Added a new constructor to the Map class that takes an array of Waypoints instead of an arrayList (Patrick)
-Added the removeWaypoint method to the Map class (Patrick)
-Added the loadOrderKnapsack and deliverOrderKnapsack methods to the simulation class (Patrick)
-Added the methods getKnapsackDeliveryTime and getNumKnapsackDeliveryTimes to the Drone class (Patrick)
-Added setDestination and setMeal methods to the order class (Patrick)
-Added the skipping system to the knapsack method. If the max weight order is ever first out of the available ones, it is sent to a queue
with the skipped orders and prioritized by position and how many times it was skipped. The lightest there are added first but the ones
that remain increase in priority. There check happens twice as when there are two orders left, the last could be stuck there when it
does not need to be (Patrick)
-Implemented the runKnapsack method starting as another FIFO simulation (Patrick)
-Changed the simulation to do turn around every time the drone returns to the start point and if it's going to hit its flight limit (Patrick)
-Changed simulation times to round to 2 decimal places (Patrick)
-Change the loadOrder and deliverOrder methods to loadOrderFIFO and deliverOrderFIFO in the simulation class (Patrick)
-Results Page now accesses actual simulation (Paul)
-Refactored Results Page to not include test simulation (Paul)
-Refactored allowing for a blank results page if no simulation has been run (Paul)
-Eliminated unused currentHour variables (Paul)
-Defaults now load into the GUI and into the proper values in DataTransfer.java (Spencer)
-Four .txt files were made that list the default items in the simulation. They are defaults given in the project outline (Spencer)
-Formatting for each default file is given at the top (although there shouldn't be a reason to change them unless I got something wrong) (Spencer)
-Uncommented out the start buttons functionality so that works again (Spencer)
-Fixed the calculate time method in the simulation (Patrick)
-Fixed the TSP calculation in the simulation (Josh)
-Removed the unneeded constructors from the Simulation class (Patrick)
-Removed the Test class (Patrick)

Version 1.18.1 4/7/20 FIFO Fixes Update
-Added the getFIFODeliveryTime and getNumFIFODeliveryTimes to the drone class (Patrick)
-Added delivery times of -1 to split the delivery times by the number of hours (Patrick)
-Added gitignore file (Paul)
-Switched around calculation of delivery times and added Java14SDK again (Paul)
-Refactored results showing, getAverage, and getWorst (Paul)
-Fixed several issues with the FIFO simulation. This includes delivery times being calculated incorrectly, deliver times being added at the wrong time, a bug with the
first five minutes of orders loop going past five minutes, a bug where the program would crash after the last order is added, a bug where the drone would not
get the last order, and a bug where the simulation would not end on its own. (Patrick)
-Fixed the delivery times during the first 5 min of the simulation (Patrick)

Version 1.18.0 4/6/20
-Transferred getAverage and getWorst to results page calculation and Created Comment For Loop on how to show results (Paul)
-Commented out ResultsGraph and changed More Types in ResultsPage (Paul)
-Changed stuff around in the commented for loop (Paul)
-Commented out Sample.fxml (Paul)
-Moved GetAverage and GetWorst to the results page and got test data to work on graphs (Paul)
-Deleted test data and added a Simulation global class variable to the results page (Paul)

Version 1.17.0 4/5/20 The FIFO Update
-Added a setCurrentPosition method to the drone class (Patrick)
-Added to the simulation resetting the drones position before each simulation (Patrick)
-Added the speed attribute to the drone class and its getter method (Patrick)
-Added the addDeliveryTime method to the drone class (Patrick)
-Added getOrderList and setOrderList methods to the drone class (Patrick)
-Added the distance method to simulation for calculating the distance between two points (Josh)
-Added maxFlightTime and its getter method to the drone class (Patrick)
-Added to the FIFO simualtion: TSP calls, distance calculations, orders being removed, location updates, delivery times being managed,
allowing time to pass so more orders show up if the drone is at home and empty, turn around times, delivery times (Patrick)
-Added pickUpTime, as well as its getter and setter to the order class (Patrick)
-Added the skipped arraylist to store the number of times each order has been skipped (Patrick)
-Added the KnapsackDeliveryTimes list and addKnapsackDeliveryTime method to the drone class (Patrick)
-Added the loadOrder, deliver, and calculateTime method to the simulation class (Patrick)
-Changed times in simulation to an arraylist in preperation of knapsack (Patrick)
-Fully Implemented the FIFO simulation (Untested) (Patrick)
-Disabled the target positions list in the drone class as it has been deemed unnecessary for the moment (Patrick)

Version 1.16.0 4/4/20
-Cleaned Up code and make some sub classes so that the main pages were easier to read - will look into doing that more in the future. (Spencer)
-Results page can be found under the Results button in the hamburger menu; however, once you go there you can go back yet (Spencer)

Version 1.15.0 4/2/20
-Added the map parameter to both Simulation constructors, as well as the simMap variable (Patrick)
-Added setStartingPoint method to Waypoint class (Patrick)
-Added startPoint, mapPoints list, the getStartingPoint, getMapPoint, and constructor taking a starting point and list of points to the
map class (Patrick)
-Added documentation for the copyOrderQueue and the generateOrderQueue methods in the simulation class (Patrick)
-Fully added the ability for the simulation class to generate orders. (Patrick)
-Fixed the hardcoded defaults for the simulation (Patrick)
-Fixed several errors with the order generation, including null pointers, and not all points being used (Patrick)

Version 1.14.0 4/1/20
-DataTransfer.java is a static class made for transferring live data between different parts of the application (Spencer)
-The GUI adds all elements in, everything else should only access the data. (Spencer)
-Food.java is no longer an abstract class as it has been deemed unnecessary. (Spencer)
-Waypoint.java now has a constructor (Josh and Spencer)
-Meal.java no longer uses an ArrayList<Food> to keep track of the food in the meal (Spencer)
-Now food is tracked by a HashMap<Food, Integer> so that we can keep track of the amount of a certain food now too. (Spencer)
-Fixed a lot of bugs temporarily (Patrick)

Version 1.13.0 3/30/20
-Adding a point now adds the name and the lat and lng of the point to the list (Spencer)

Version 1.12.0 3/29/20
-Added getIsStartingPoint method to Waypoint class (Patrick)
-Added a variable to store the drones current weight and its corresponding getter (Patrick)
-Added methods to the drone class for adding and removing orders which automatically recalculate the drone's current weight (Patrick)
-Removed several variables from the FIFO simulation that were no longer needed (Patrick)
-Changed what keeps the FIFO simulation looping as there was something much easier and smarter (Patrick)

Version 1.11.0 3/28/20
-Adding a point now adds the name and the lat and lng of the point to the list (Spencer)

Version 1.10.0 3/26/20
-Added initial TSP code (Josh)
-Refactored to show data in test graph for ArrayList (Paul)
-Fixed some Arraylists in simulation not being initialized in the right place (Patrick)

Version 1.9.0 3/25/20
-Added the isStartingPoint boolean to Waypoints (Patrick)
-Clicking on the Google Map now adds the lat and long of the point clicked into the list (Spencer)
(This is temporary but it proves that the data fetch worked)
-Reorganized the Map Page (Spencer)
-Clicking on the map now changes a temporary variable instead of adding it to the list (Spencer)
-Polished Test Creation of Graph (Paul)
-Can Actually Show Data in the Test (Paul)

Version 1.8.0 3/24/20
-Added the drones current turn around time and its getter and setter methods to the drone class (Patrick)
-Added the default constructor in the Drone class (Patrick)
-Implemented the copyOrderQueue method in the simulation class (Patrick)
-Changed the targetPosition waypoint in drone to a list of target positions calculated with TSP (Patrick)
-Changed the getTargetPosition method in drone to get the first position within the drone (Patrick)
-Began implementing part of the FIFO method as well as continued planning it out in more depth (Patrick)

Version 1.7.0 3/23/20
-Some more kinks in storage changed and able to Display Graph with No Data (Paul)
-Merge branch 'master' into Paul (Paul)
-Refactor Displaying No Data Graph (Paul)
-Live Map now loads onto Map page (Spencer)

Version 1.6.0 3/22/20
-Deleted Results class and Added OrderGenerator Class (Paul)
-Created a Application to Test Making a Bar Graph (Paul)

Version 1.5.0 3/18/20
-Added parameterized constructor to the order class (Patrick)
-Added times array to simulation class (Patrick)
-Added the heapSort and createHeap methods for efficiently sorting the times array in the simulation class (Patrick)
-Added the test class for testing non-gui code separately (Patrick)
-Implemented the run simulation method in the simulation class (Patrick)
-Began implementing the generateOrderQueue, runFIFO, and runKnapsack methods in the simulation class (Patrick)
-Food Page adds and removes items in the list with some criteria (Spencer)
-Meals Page now populated (Spencer)
-Meals Page adds and removes items in the list with some criteria (Spencer)
-Meals Page queries the Food page to get the list of food in the project (Spencer)

Version 1.4.0 3/17/20
-Made way to store average and worst in simulation (Paul)
-Made average and worst variables able to be accessed from all classes (Paul)
-Added the default and parameterized constructor to the meal class (Patrick)
-Added the default and parameterized (unimplemented) constructor to the simulation class (Patrick)
-Added the getNextRoute method to the simulation class (Patrick)
-Changed the startSimulation method to runSimulation in the Simulation class (Patrick)
-Removed the calculateTotalWeight method from the meals class and changed the add and remove item methods to be more efficient (Patrick)

Version 1.3.0 3/16/20
-Made Results Class with Get Average and Get Worst with added Functionality (Paul)
-Food Page now populated with the objects it will have (Spencer)

Version 1.2.0 3/14/20
-Implemented the addItem and calculateTotalWeight (added documentation) methods in the meal class (Patrick)
-Added the removeItem and setProbability methods in the meal class (Patrick)
-Added the Hamburger, Fries, and Drink classes along with their corresponding variable values (Patrick)
-Added the getOrderOnDrone, getWeightCapacity, getTargetPosition, and getCurrentPosition methods and their corresponding variables
to the drone class (Patrick)
-Added the overall orderQueue, mealList, and the currentOrderQueue to the simulation class (Patrick)
-Added the startSimulation (Unimplemented), generateOrderQueue (Unimplemented), copyOrderQueue (Unimplemented), runFIFO (Unimplemented) and
runKnapsack (Unimplemented) methods to the simulation class (Patrick)
-Side Menu properly changes between the four main screens (Spencer)
-Side Menu has a hamburger button to get to secondary side menu (Spencer)
-Secondary Side Menu buttons are non-functional except for Quit (Spencer)
-Clicking all main screens when secondary side menu closes the secondary side menu (Spencer)
-Styles data class created to track CSS styles of all objects (Spencer)
-Values data class created to track certain properties of all objects (Spencer)

Version 1.1.0 3/13/20
-Added the Food (abstract), Meal, Order, Map, Waypoint, Drone, and Simulation classes (Patrick)
-Added the Food, Mapping, and Simulation packages (Patrick)
-Added the getWeight and getName methods and their corresponding variables to the food class (Patrick)
-Added the getTotalWeight, getProbability, addItem (Unimplemented) and calculateTotalWeight (Unimplemented) methods and their
corresponding variables to the meal class (Patrick)
-Added the getDestination and getWaypoint methods and their corresponding variables to the order class (Patrick)

Version 1.0.1 3/12/20
-Added Version History file (Patrick)

Version 1.0.0 3/12/20
-Added main and controller classes made by default for JavaFX project's (Patrick)
-Added the GUI package (Patrick)